{"version":3,"sources":["components/Card.module.css","components/Card.js","components/Quote.js","App.js","index.js","components/Quote.module.css"],"names":["module","exports","Card","props","className","styles","card","children","Quote","id","quote","icon","faQuoteLeft","style","marginRight","data","author","href","rel","target","faTwitter","size","faTumblr","type","onClick","onRequest","App","useState","newReq","setNewReq","setQuote","useEffect","fetch","then","response","json","content","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,wICMVC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAOC,KAAvB,SAA8BH,EAAMI,Y,sCC4C9BC,EA1CD,SAACL,GACb,OACE,sBAAKM,GAAG,YAAYL,UAAWC,IAAOK,MAAtC,UACE,qBAAKD,GAAG,OAAR,SACE,+BACE,cAAC,IAAD,CAAiBE,KAAMC,IAAaC,MAAO,CAAEC,YAAa,UACzDX,EAAMY,KAAKL,WAGhB,qBAAKD,GAAG,SAASL,UAAWC,IAAOW,OAAnC,SACE,mCAAMb,EAAMY,KAAKC,YAEnB,sBAAKZ,UAAWC,IAAO,cAAvB,UACE,sBAAKD,UAAWC,IAAO,gBAAvB,UACE,mBACEY,KACE,mDACGd,EAAMY,KAAKL,MADd,aACwBP,EAAMY,KAAKC,QAErCE,IAAI,aACJC,OAAO,SACPV,GAAG,cAPL,SASE,cAAC,IAAD,CAAiBE,KAAMS,IAAWC,KAAK,SAEzC,mBACEJ,KAAK,0BACLC,IAAI,aACJC,OAAO,SACPV,GAAG,eAJL,SAME,cAAC,IAAD,CAAiBE,KAAMW,IAAUD,KAAK,YAG1C,wBAAQE,KAAK,SAASC,QAASrB,EAAMsB,UAAWhB,GAAG,YAAnD,8BCDOiB,MAjCf,WACE,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,CACjCjB,MAAO,GACPM,OAAQ,KAFV,mBAAON,EAAP,KAAcoB,EAAd,KAwBA,OAlBAC,qBAAU,WACRC,MAAM,kCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAClB,GAAD,OACJe,EAAS,CACPpB,MAAOK,EAAKqB,QACZpB,OAAQD,EAAKC,cAGlB,CAACY,IAUF,cAAC,EAAD,UACE,cAAC,EAAD,CAAOb,KAAML,EAAOe,UARH,WACnBI,GAAU,SAACQ,GACT,OAAQA,WCvBdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B1C,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,aAAa,0BAA0B,eAAe,+B","file":"static/js/main.686216fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3qLYW\"};","import React from \"react\";\r\nimport styles from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={styles.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styles from \"./Quote.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTumblr, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Quote = (props) => {\r\n  return (\r\n    <div id=\"quote-box\" className={styles.quote}>\r\n      <div id=\"text\">\r\n        <h2>\r\n          <FontAwesomeIcon icon={faQuoteLeft} style={{ marginRight: \"10px\" }} />\r\n          {props.data.quote}\r\n        </h2>\r\n      </div>\r\n      <div id=\"author\" className={styles.author}>\r\n        <h3>-{props.data.author}</h3>\r\n      </div>\r\n      <div className={styles[\"bottom-bar\"]}>\r\n        <div className={styles[\"anchor-links\"]}>\r\n          <a\r\n            href={\r\n              \"https://twitter.com/intent/tweet?text=\" +\r\n              `${props.data.quote} -${props.data.author}`\r\n            }\r\n            rel=\"noreferrer\"\r\n            target=\"_blank\"\r\n            id=\"tweet-quote\"\r\n          >\r\n            <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\r\n          </a>\r\n          <a\r\n            href=\"https://www.tumblr.com/\"\r\n            rel=\"noreferrer\"\r\n            target=\"_blank\"\r\n            id=\"tumblr-quote\"\r\n          >\r\n            <FontAwesomeIcon icon={faTumblr} size=\"2x\" />\r\n          </a>\r\n        </div>\r\n        <button type=\"submit\" onClick={props.onRequest} id=\"new-quote\">\r\n          New Quote\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import { useEffect, useState } from \"react\";\nimport Card from \"../src/components/Card\";\nimport Quote from \"../src/components/Quote\";\n\n// https://api.quotable.io/random  fetch random quote using this link https://github.com/lukePeavey/quotable credits\n\nfunction App() {\n  const [newReq, setNewReq] = useState(false); //everytime newReq changes its state a new request is triggered by changing useEffect dependencies\n  const [quote, setQuote] = useState({\n    quote: \"\",\n    author: \"\",\n  });\n\n  // useEffect will fetch from this API and populate a new quote object...will trigger again when newReq changes its state\n  useEffect(() => {\n    fetch(\"https://api.quotable.io/random\")\n      .then((response) => response.json())\n      .then((data) =>\n        setQuote({\n          quote: data.content,\n          author: data.author,\n        })\n      );\n  }, [newReq]);\n\n  //passing callback down through Quote to be called when the button is clicked\n  const quoteHandler = () => {\n    setNewReq((prevState) => {\n      return !prevState;\n    });\n  };\n\n  return (\n    <Card>\n      <Quote data={quote} onRequest={quoteHandler} />\n    </Card>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"Quote_quote__3R3On\",\"author\":\"Quote_author__2ThWe\",\"bottom-bar\":\"Quote_bottom-bar__3dZLZ\",\"anchor-links\":\"Quote_anchor-links__3tyeT\"};"],"sourceRoot":""}